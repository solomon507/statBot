{"version":3,"sources":["../src/index.js"],"names":["Discord","logger","dotenv","steem","config","triggerBotKey","client","Client","on","info","user","tag","msg","content","substring","args","split","cmd","splice","message","reply","api","getAccounts","err","result","console","log","JSON","parse","json_metadata","name","voting_power","profile","about","query","querying","Posts","Votes","PendingPayouts","Comments","login","process","env","DISCORD_TOKEN"],"mappings":";;AAAA;;IAAYA,O;;AACZ;;IAAYC,M;;AACZ;;IAAYC,M;;AACZ;;IAAYC,K;;AAEZ;;AAIA;;;;;;AAFAD,OAAOE,MAAP;;AAIA;AACA,IAAMC,gBAAgB,GAAtB;;AAEA;AACA,IAAMC,SAAS,IAAIN,QAAQO,MAAZ,EAAf;;AAEAD,OAAOE,EAAP,CAAU,OAAV,EAAmB,YAAM;AACrBP,WAAOQ,IAAP,mBAA4BH,OAAOI,IAAP,CAAYC,GAAxC;AACH,CAFD;;AAIAL,OAAOE,EAAP,CAAU,SAAV,EAAqB,eAAO;AACxBP,WAAOQ,IAAP,CAAYG,IAAIC,OAAhB;;AAEA,QAAID,IAAIC,OAAJ,CAAYC,SAAZ,CAAsB,CAAtB,EAAyB,CAAzB,KAA+BT,aAAnC,EAAkD;AAC9C,YAAIU,OAAOH,IAAIC,OAAJ,CAAYC,SAAZ,CAAsB,CAAtB,EAAyBE,KAAzB,CAA+B,GAA/B,CAAX;AACA,YAAIC,MAAMF,KAAK,CAAL,CAAV;AACAA,eAAOA,KAAKG,MAAL,CAAY,CAAZ,CAAP;AACAjB,eAAOQ,IAAP,WAAoBQ,GAApB;AACAhB,eAAOQ,IAAP,YAAqBM,IAArB;AACA,YAAII,gBAAJ;AACA,gBAAQF,GAAR;AACI,iBAAK,MAAL;AACIE;AAKAP,oBAAIQ,KAAJ,CAAUD,OAAV;AACA;AACJ,iBAAK,MAAL;AACIhB,sBAAMkB,GAAN,CAAUC,WAAV,CAAsBP,IAAtB,EAA4B,UAASQ,GAAT,EAAcC,MAAd,EAAsB;AAC9C,wBAAI,CAAC,CAACA,OAAO,CAAP,CAAN,EAAiB;AACbC,gCAAQC,GAAR,CAAYF,OAAO,CAAP,CAAZ;AACAC,gCAAQC,GAAR,CAAYC,KAAKC,KAAL,CAAWJ,OAAO,CAAP,EAAUK,aAArB,CAAZ;;AAEAV,wCAAcK,OAAO,CAAP,EAAUM,IAAxB,aACIN,OAAO,CAAP,EAAUO,YADd,8CAGIJ,KAAKC,KAAL,CAAWJ,OAAO,CAAP,EAAUK,aAArB,EAAoCG,OAApC,CAA4CC,KAHhD;AAKArB,4BAAIQ,KAAJ,CAAUD,OAAV;AACH,qBAVD,MAUO;AACHP,4BAAIQ,KAAJ,CAAU,gBAAV;AACH;AACJ,iBAdD;AAeA;AACJ,iBAAK,MAAL;AACID,0BAAU,OAAV;AACAP,oBAAIQ,KAAJ,CAAUD,OAAV;AACA;AACJ,iBAAK,KAAL;AACIP,oBAAIQ,KAAJ,CAAU,4BAAV;AACA,oBAAMc,mXAAN;;AAFJ,oBAoBmBC,QApBnB;AAAA,uFAoBI,iBAAwBD,KAAxB,EAA+BvB,GAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+CACuB,sBAAauB,KAAb,CADvB;;AAAA;AACQV,8CADR;;AAEIC,gDAAQC,GAAR,CAAYF,MAAZ;AACAA,mDAAW,OAAX,GACMZ,IAAIQ,KAAJ,CAAU,oBAAV,CADN,GAEMR,IAAIQ,KAAJ,+CAEOI,OAAO,CAAP,EAAUY,KAFjB,6DAGOZ,OAAO,CAAP,EAAUa,KAHjB,8DAIQb,OAAO,CAAP,EAAUc,cAJlB,6DAKOd,OAAO,CAAP,EAAUe,QALjB,oEAMW5B,GANX,yBAFN;;AAHJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBApBJ;;AAAA,oCAoBmBwB,QApBnB;AAAA;AAAA;AAAA;;AAkCIA,yBAASD,KAAT,EAAgBnB,IAAhB;AACA;AACJ;AACII,0BAAU,wBAAV;AACAP,oBAAIQ,KAAJ,CAAUD,OAAV;AACA;AArER;AAuEH;AACJ,CAlFD;AAmFAb,OAAOkC,KAAP,CAAaC,QAAQC,GAAR,CAAYC,aAAzB","file":"index.js","sourcesContent":["import * as Discord from 'discord.js';\nimport * as logger from 'winston';\nimport * as dotenv from 'dotenv';\nimport * as steem from 'steem';\n\nimport 'babel-polyfill';\n\ndotenv.config();\n\nimport { executeQuery } from './db';\n\n// setting\nconst triggerBotKey = '!';\n\n// start client\nconst client = new Discord.Client();\n\nclient.on('ready', () => {\n    logger.info(`Logged in as ${client.user.tag}!`);\n});\n\nclient.on('message', msg => {\n    logger.info(msg.content);\n\n    if (msg.content.substring(0, 1) == triggerBotKey) {\n        var args = msg.content.substring(1).split(' ');\n        var cmd = args[0];\n        args = args.splice(1);\n        logger.info(`CMD: ${cmd}`);\n        logger.info(`ARGS: ${args}`);\n        let message;\n        switch (cmd) {\n            case 'help':\n                message = `statBot HELP\\n\n                Type \\`!ping\\` to get bot reply 'pong'\\n\n                Type \\`!user <steem_name>\\` to get details of that person (without @)\\n\n                Type \\`!tag <tag_name>\\` to get details on votes, comments, topics and pending payout of that certain tags in past 7 days\n                `;\n                msg.reply(message);\n                break;\n            case 'user':\n                steem.api.getAccounts(args, function(err, result) {\n                    if (!!result[0]) {\n                        console.log(result[0]);\n                        console.log(JSON.parse(result[0].json_metadata));\n\n                        message = `@${result[0].name} has ${\n                            result[0].voting_power\n                        }üí™ and his about said that \"${\n                            JSON.parse(result[0].json_metadata).profile.about\n                        }\"`;\n                        msg.reply(message);\n                    } else {\n                        msg.reply('User not found');\n                    }\n                });\n                break;\n            case 'ping':\n                message = 'Pong!';\n                msg.reply(message);\n                break;\n            case 'tag':\n                msg.reply('Connecting to database....');\n                const query = `\nselect\n SUM(net_votes) as Votes,\n SUM(pending_payout_value) as PendingPayouts,\n SUM(children) as Comments,\n COUNT(*) as Posts\nfrom\n Comments (NOLOCK)\nwhere\n dirty = 'False' and\n json_metadata LIKE('%\"malaysia\"%') and\n  parent_author = '' and\n datediff(day, created, GETDATE()) between 0 and 7\norder by\n Votes desc\n\n\n                     `;\n                async function querying(query, tag) {\n                    let result = await executeQuery(query);\n                    console.log(result);\n                    result === 'ERROR'\n                        ? msg.reply('ERROR ON QUERY-ING')\n                        : msg.reply(\n                              `There is\n                               ${result[0].Posts} posts üìò,\n                               ${result[0].Votes} votes üëç,\n                               $${result[0].PendingPayouts} steem üíµ,\n                               ${result[0].Comments} comments üí¨,\n                               on #${tag} in the past 7 days`\n                          );\n                }\n                querying(query, args);\n                break;\n            default:\n                message = '`!help` to get started';\n                msg.reply(message);\n                break;\n        }\n    }\n});\nclient.login(process.env.DISCORD_TOKEN);\n"]}