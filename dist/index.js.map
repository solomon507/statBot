{"version":3,"sources":["../src/index.js"],"names":["Discord","logger","dotenv","steem","http","config","triggerBotKey","client","Client","on","info","user","tag","msg","content","substring","args","split","cmd","splice","console","log","message","reply","api","getAccountReferences","err","result","getAccounts","results","map","JSON","parse","json_metadata","name","voting_power","profile","about","query","querying","Posts","Votes","PendingPayouts","Comments","login","process","env","DISCORD_TOKEN","createServer","request","response","writeHead","contentType","end","listen","PORT"],"mappings":"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","file":"index.js","sourcesContent":["import * as Discord from 'discord.js';\nimport * as logger from 'winston';\nimport * as dotenv from 'dotenv';\nimport * as steem from 'steem';\nimport * as http from 'http';\n\nimport 'babel-polyfill';\n\ndotenv.config();\n\nimport { executeQuery } from './db';\n\n// setting\nconst triggerBotKey = '!';\n\n// start client\nconst client = new Discord.Client();\n\nclient.on('ready', () => {\n    logger.info(`Logged in as ${client.user.tag}!`);\n});\n\nclient.on('message', msg => {\n    logger.info(msg.content);\n\n    if (msg.content.substring(0, 1) == triggerBotKey) {\n        var args = msg.content.substring(1).split(' ');\n        var cmd = args[0];\n        args = args.splice(1);\n        logger.info(`CMD: ${cmd}`);\n        logger.info(`ARGS: ${args}`);\n        console.log(args);\n        let message;\n        switch (cmd) {\n            case 'help':\n                message = `statBot HELP\\n\n                Type \\`!ping\\` to get bot reply 'pong'\\n\n                Type \\`!user <steem_name>\\` to get details of that person (without @)\\n\n                Type \\`!tag <tag_name>\\` to get details on votes, comments, topics and pending payout of that certain tags in past 7 days\n                `;\n                msg.reply(message);\n                break;\n            case 'history':\n                steem.api.getAccountReferences(args, function(err, result) {\n                    console.log(err, result);\n                });\n                break;\n\n            case 'user':\n                steem.api.getAccounts(args, function(err, results) {\n                    if (!!results[0]) {\n                        results.map(result => {\n                            if (!!result) {\n                                console.log(result);\n                                console.log(JSON.parse(result.json_metadata));\n\n                                message = `@${result.name} has ${\n                                    result.voting_power\n                                }üí™ and his about said that \"${\n                                    JSON.parse(result.json_metadata).profile\n                                        .about\n                                }\"`;\n                                msg.reply(message);\n                            } else {\n                                msg.reply('User not found');\n                            }\n                        });\n                    } else {\n                        msg.reply('User not found');\n                    }\n                });\n                break;\n            case 'ping':\n                message = 'Pong!';\n                msg.reply(message);\n                break;\n            case 'tag':\n                msg.reply('Connecting to database....');\n                const query = `\nselect\n SUM(net_votes) as Votes,\n SUM(pending_payout_value) as PendingPayouts,\n SUM(children) as Comments,\n COUNT(*) as Posts\nfrom\n Comments (NOLOCK)\nwhere\n dirty = 'False' and\n json_metadata LIKE('%\"${args[0]}\"%') and\n  parent_author = '' and\n datediff(day, created, GETDATE()) between 0 and 7\norder by\n Votes desc\n\n\n                     `;\n                async function querying(query, tag) {\n                    let result = await executeQuery(query);\n                    console.log(result);\n                    result === 'ERROR'\n                        ? msg.reply('ERROR ON QUERY-ING')\n                        : msg.reply(\n                              `There is\n                               ${result[0].Posts} posts üìò,\n                               ${result[0].Votes} votes üëç,\n                               $${result[0].PendingPayouts} steem üíµ,\n                               ${result[0].Comments} comments üí¨,\n                               on #${tag} in the past 7 days`\n                          );\n                }\n                querying(query, args);\n                break;\n            default:\n                message = '`!help` to get started';\n                msg.reply(message);\n                break;\n        }\n    }\n});\nclient.login(process.env.DISCORD_TOKEN);\nhttp\n    .createServer(function(request, response) {\n        response.writeHead(200, { 'Content-Type': contentType });\n        response.end(content, 'utf-8');\n    })\n    .listen(process.env.PORT || 5000);\n"]}